version: "3.8"

services:
  postgres:
    image: postgres:16-alpine
    container_name: atech_pg_local
    env_file:
      - .env.local
    environment:
      POSTGRES_DB: ${DB_NAME:-appdb}
      POSTGRES_USER: ${DB_USER:-appuser}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-apppass}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      # OJO: doble $ para que se eval√∫e dentro del contenedor
      test: ["CMD-SHELL","pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend/Atech
      dockerfile: Dockerfile.dev
    container_name: atech_backend_local
    env_file:
      - .env.local
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-dev}
      SERVER_PORT: ${SERVER_PORT:-8080}
      DB_HOST: postgres
      DB_PORT: ${DB_PORT:-5432}
      DB_NAME: ${DB_NAME:-appdb}
      DB_USER: ${DB_USER:-appuser}
      DB_PASSWORD: ${DB_PASSWORD:-apppass}
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8080:8080"
    volumes:
      - ./backend/Atech:/app
      - m2:/root/.m2
      - ./backend/Atech/maven-settings.xml:/root/.m2/settings.xml:ro

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: atech_frontend_local
    env_file:
      - .env.local
    environment:
      VITE_API_BASE_URL: ${VITE_API_BASE_URL:-http://localhost:8080}
      HOST: 0.0.0.0
    ports:
      - "4200:4200"
    volumes:
      - ./frontend:/app
      - /app/node_modules

volumes:
  pgdata:
  m2:

