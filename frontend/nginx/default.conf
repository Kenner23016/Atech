upstream backend_upstream {
  server backend:8080;
  keepalive 32;
}

server {
  listen 80;
  server_name _;

  # --------- SPA estático ----------
  root /usr/share/nginx/html;
  index index.html;

  # Archivos estáticos versionados: cache agresiva (inmutables)
  location ~* \.(?:js|css|png|jpg|jpeg|gif|svg|ico|webp|woff|woff2|ttf|eot)$ {
    access_log off;
    expires 1y;
    add_header Cache-Control "public, max-age=31536000, immutable";
    try_files $uri =404;
  }

  # index.html NUNCA en caché (para que cargue la versión nueva)
  location = /index.html {
    add_header Cache-Control "no-store";
    try_files $uri =404;
  }

  # SPA fallback
  location / {
    try_files $uri $uri/ /index.html;
  }

  # --------- Proxy al backend (/api) ----------
  location /api {
    proxy_pass http://backend_upstream;

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    # WebSockets (por si alguna ruta los usa)
    proxy_set_header Upgrade $http_upgrade;
    # si tu plantilla no define $connection_upgrade, usa:
    # proxy_set_header Connection "upgrade";
    proxy_set_header Connection $connection_upgrade;

    proxy_http_version 1.1;
    proxy_redirect off;
    proxy_read_timeout 60s;
    proxy_send_timeout 60s;
    proxy_connect_timeout 5s;
    proxy_buffers 16 32k;
    proxy_busy_buffers_size 64k;

    # Si tu backend NO tiene prefijo /api, descomenta:
    # rewrite ^/api/?(.*)$ /$1 break;
  }

  # (Opcional) Actuator
  location /actuator {
    proxy_pass http://backend_upstream/actuator;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }

  # límite de subida
  client_max_body_size 10m;

  # error simple
  error_page 502 503 504 /50x.html;
  location = /50x.html {
    internal;
    return 503 "Servicio temporalmente no disponible\n";
  }
}

